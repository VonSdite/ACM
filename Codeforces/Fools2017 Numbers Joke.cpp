/**
 * 		
史密夫数列
史密夫数（或作史密斯数）是指在某个进位下，它每一位数的数字的和相等於它因数分解（不用指数记数）中每一个因数的位数的和。
在十进位下，202就是一个史密夫数，因 2 + 0 + 2 = 4，202的因数分解为2 × 101，2 + 1 + 0 + 1 = 4。
所有质数也不会当作是史密夫数，因质数的因数只有它自己和1，必定不符合以上的要求。
史密夫数是由美国利哈伊大学的阿尔伯特·维兰斯基（Albert Wilansky）发现，而第一个被发现的史密夫数是4937775，因为Wilansky该位表兄弟的电话号码是4937775。
在十进位下的史密夫数如下（OEIS中的数列A006753）：
4, 22, 27, 58, 85, 94, 121, 166, 202, 265, 274, 319, 346, 355, 378, 382, 391, 438, 454, 483, 517, 526, 535, 562, 576, 588, 627, 634, 636, 645, 648, 654, 663, 666, 690, 706, 728, 729, 762, 778, 825, 852, 861, 895, 913, 915, 922, 958, 985, 1086

 Smith (or joke) numbers: composite numbers n such that sum of digits of n = sum of digits of prime factors of n (counted with multiplicity). 
(Formerly M3582)
 */
#include <bits/stdc++.h>

using namespace std;

int a[]={4, 22, 27, 58, 85, 94, 121, 166, 202, 265, 274, 319, 346, 355, 378, 382, 391, 438, 454, 483, 517, 526, 535, 562, 576, 588, 627, 634, 636, 645, 648, 654, 663, 666, 690, 706, 728, 729, 762, 778, 825, 852, 861, 895, 913, 915, 922, 958, 985, 1086, 1111, 1165};

int main(int argc, char const *argv[])
{
	int n;
	while (~scanf("%d", &n))
	{
		printf("%d\n", a[n-1]);
	}
	return 0;
}